package org.openvisko.module;

import org.openvisko.module.registration.AbstractModuleRDFRegistration;
import org.openvisko.module.registration.ModuleOperatorService;
import org.openvisko.module.registration.ModuleWriter;

import com.hp.hpl.jena.ontology.OntResource;

import edu.utep.trustlab.visko.ontology.pmlp.Format;
import edu.utep.trustlab.visko.ontology.viskoService.Toolkit;
import edu.utep.trustlab.visko.ontology.viskoView.VisualizationAbstraction;
import edu.utep.trustlab.visko.ontology.vocabulary.ViskoV;


public class ModuleRDFRegistration extends AbstractModuleRDFRegistration {
  
  private static final class Resources{
    //formats
    private static final Format tiff = ModuleWriter.getFormat("https://raw.github.com/nicholasdelrio/visko/master/resources/formats/TIFF.owl#TIFF");
    private static final Format xml = ModuleWriter.getFormat("https://raw.github.com/nicholasdelrio/visko/master/resources/formats/XML.owl#XML");
    
    //views
    private static final VisualizationAbstraction rasterMap2D = ModuleWriter.getView(ViskoV.INDIVIDUAL_URI_2D_RasterMap);

    //data types
    private static final OntResource thing = ModuleWriter.getDataType("http://www.w3.org/2002/07/owl#Thing");
    
    }
  
  @Override
  public void populateServices() {
    String wsdlURL = getWSDLURL();
    
    String operationName = "generateSampleImage";
    ModuleOperatorService service2 = getPackageWriter().createNewOperatorService(null, operationName);
    service2.setComment("Generate sample image of nano particles");
    service2.setLabel(operationName);
    service2.setWSDLURL(wsdlURL);
    service2.setInputFormat(Resources.xml);
    service2.setOutputFormat(Resources.tiff);
    service2.setView(Resources.rasterMap2D);
    service2.setInputDataType(Resources.thing);
    service2.setOutputDataType(Resources.thing);
  }

  @Override
  public void populateToolkit() {    
    Toolkit toolkit = getPackageWriter().createNewToolkit("cii");
    toolkit.setLabel("Chemical Imaging");
    toolkit.setComment("Chemical Imaging");    
  }

  @Override
  public void populateViewerSets() {
    // TODO Auto-generated method stub
    
  }
  
  @Override
  public void populateParameterBindings() {
    // TODO Auto-generated method stub
  }
  
  /***
   * Child classes can override this method if they want to hard code a specific
   * URL instead of using the URL generated by the build.
   * @see org.openvisko.module.registration.AbstractModuleRDFRegistration#getWSDLURL()
   */
  @Override
  public String getWSDLURL() {
    //http://we20657.pnl.gov:8080/package_cii/services/PackageService?wsdl
    String wsdlUrl = getWebServerUrl() + "/" + getWebappName() + "/services/ModuleService?wsdl";
    return wsdlUrl;
  }
 
}
